"""empty message

Revision ID: b510e9b44a28
Revises: c91125b28244
Create Date: 2023-11-29 21:25:57.040474

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b510e9b44a28'
down_revision = 'c91125b28244'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fixed',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('fixedcategory_id', sa.Integer(), nullable=True),
    sa.Column('dateTime', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fixedcategory_id'], ['fixed_category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ocassional',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('ocassionalcategory_id', sa.Integer(), nullable=True),
    sa.Column('dateTime', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ocassionalcategory_id'], ['ocassional_category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('fixed_expense')
    op.drop_table('ocassional_expense')
    with op.batch_alter_table('income', schema=None) as batch_op:
        batch_op.add_column(sa.Column('incomecategory_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('income_category_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'income_category', ['incomecategory_id'], ['id'])
        batch_op.drop_column('category_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('income', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('income_category_id_fkey', 'income_category', ['category_id'], ['id'])
        batch_op.drop_column('incomecategory_id')

    op.create_table('ocassional_expense',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['ocassional_category.id'], name='ocassional_expense_category_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='ocassional_expense_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ocassional_expense_pkey')
    )
    op.create_table('fixed_expense',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['fixed_category.id'], name='fixed_expense_category_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fixed_expense_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='fixed_expense_pkey')
    )
    op.drop_table('ocassional')
    op.drop_table('fixed')
    # ### end Alembic commands ###
